{
    "$schema": "http://json-schema.org/schema#",

    "title": "Object types",
    "description": "Complex object types used in OpenStack notifications",

    "objects": {
        "image_properties": {
            "type": "object",
            "properties": {
                // Lack of consistency of booleans
                "cache_in_nova": { "enum": ["True", "False"]},
                "image_type": { "type": "string" },
                "os_distro": { "type": "string" },
                "os_type": { "type": "string" },
                "vm_mode": { "type": "string" },
    
                "org.openstack__1__os_distro": { "type": "string" },
                "org.openstack__1__architecture": { "type": "string" },
                // Can this be an integer?
                "org.openstack__1__os_version": { "type": "string" }
            }
        },
    
        "image": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": { "$ref": "types.json#/definitions/uuid" },
                        "name": { "type": "string" },
                        "status": { "type": "string" },
                        "owner": { "type": "string" },
                        "is_public": { "type": "boolean" },
                        "container_format": { "type": "string" },
                        "disk_format": { "type": "string" },
                        "min_disk": { "type": "integer" },
                        "min_ram": { "type": "integer" },
                        "properties": { "$ref": "#/objects/image_properties"},
    
                        "checksum": { "type": "string" },
                        "size": { "type": "integer" }
                    }
                },
                { "$ref": "types.json#/definitions/timestamps" }
            ]
        },
    
        "image_meta": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        // This is "disabled" in some places and false in others
                        "auto_disk_config": { "$ref": "types.json#/definitions/enabled_disabled"},
                        "base_image_ref": { "$ref": "types.json#/definitions/uuid"},
                        // Enum?
                        "container_format": { "type": "string" },
                        // Enum?
                        "disk_format": { "type": "string" },
                        // Inconsistent with image - why not an integer?
                        "min_disk": { "$ref": "types.json#/definitions/integer_string"},
                        // Inconsistent with image - why is this a string and not an integer?
                        "min_ram": { "$ref": "types.json#/definitions/enabled_disabled"}
                    }
                },
                { "$ref": "#/objects/image_properties" }
            ]
        },
    
        "block_device_mapping": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "instance_uuid": { "$ref": "types.json#/definitions/uuid"},
                    "guest_format": { "$ref": "types.json#/definitions/string_null"},
                    "boot_index": { "type": "integer" },
                    "no_device": { "$ref": "types.json#/definitions/string_null"},
                    "snapshot_id": { "$ref": "types.json#/definitions/string_null"},
                    "volume_size": { "$ref": "types.json#/definitions/integer_null"},
                    "device_name": { "$ref": "types.json#/definitions/string_null"},
                    "disk_bus": { "$ref": "types.json#/definitions/string_null"},
                    "image_id": { "$ref": "types.json#/definitions/uuid"},
                    "source_type": { "type": "string" },
                    "device_type": { "type": "string" },
                    "volume_id": { "$ref": "types.json#/definitions/string_null"},
                    "destination_type": { "type": "string" },
                    "delete_on_termination": { "type": "boolean" }
                }
            }
        },
    
        "instance_type": {
            "type": "object",
            "properties": {
                "root_gb": { "type": "integer" },
                "name": { "type": "string" },
                "ephemeral_gb": { "type": "integer" },
                "memory_mb": { "type": "integer" },
                "vcpus": { "type": "integer" },
                "extra_specs": { "type": "object" },
                "swap": { "type": "integer" },
                "rxtx_factor": { "type": "number" },
                "flavorid": { "type": "string" },
                "vcpu_weight": { "type": "integer" },
                "id": { "type": "integer" }
            }
        },
    
        "security_group": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "project_id": { "type": "string" },
                        "user_id": { "$ref": "types.json#/definitions/uuid"},
                        "description": { "type": "string" }
                    }
                },
                { "$ref": "types.json#/definitions/timestamps" }
            ]
        },
    
        "info_cache": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "instance_uuid": { "$ref": "types.json#/definitions/uuid"},
                        "network_info": []
                    }
                },
                { "$ref": "types.json#/definitions/timestamps" }
            ]
        },
    
        // Not sure if this really needs a full schema. The contents are
        // fairly free-form. Might be best just to define it as "object"
        // and leave the specific properties undefined.
        "system_metadata": {
            "type": "object",
            "properties": {
                "image_cache_in_nova": { "$ref": "types.json#/definitions/boolean_string" },
                "instance_type_id": { "type": "string" },
                "image_min_ram": { "type": "integer" },
                "image_os_distro": { "type": "string" },
                "instance_type_vcpu_weight": { "$ref": "types.json#/definitions/integer_string" },
                "instance_type_ephemeral_gb": { "$ref": "types.json#/definitions/integer_string" },
                "image_org.openstack__1__os_version": { "type": "string" },
                "image_org.openstack__1__os_distro": { "type": "string" },
                "image_org.openstack__1__architecture": { "type": "string" },
                "image_base_image_ref": { "$ref": "types.json#/definitions/uuid" },
                "instance_type_swap": { "type": "string" },
                "image_os_type": { "type": "string" },
                "instance_type_root_gb": { "$ref": "types.json#/definitions/integer_string" },
                "instance_type_name": { "type": "string" },
                "image_image_type": { "type": "string" },
                "instance_type_rxtx_factor": { "$ref": "types.json#/definitions/integer_string" },
                "image_auto_disk_config": { "$ref": "types.json#/definitions/enabled_disabled" },
                "instance_type_vcpus": "1",
                "image_disk_format": { "type": "string" },
                "instance_type_memory_mb": { "$ref": "types.json#/definitions/integer_string" },
                "image_vm_mode": { "type": "string" },
                "image_min_disk": { "type": "integer" },
                "instance_type_flavorid": { "type": "string" },
                "image_container_format": { "type": "string" }
            }
        },
    
        "instance_properties": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "vm_state": { "type": "string" },
                        "availability_zone": { "$ref": "types.json#/definitions/string_null" },
                        "ephemeral_gb": { "type": "integer" },
                        "instance_type_id": { "type": "integer" },
                        "user_data": { "$ref": "types.json#/definitions/string_null" },
                        "cleaned": { "type": "boolean" },
                        "vm_mode": { "type": "string" },
                        "reservation_id": { "type": "string" },
                        "id": { "type": "integer" },
                        "disable_terminate": { "type": "boolean" },
                        "display_name": { "type": "string" },
                        "uuid": { "$ref": "types.json#/definitions/uuid"},
                        "default_swap_device": { "$ref": "types.json#/definitions/string_null" },
                        "hostname": { "type": "string" },
                        "launched_on": { "$ref": "types.json#/definitions/string_null" },
                        "launched_at": { "$ref": "types.json#/definitions/date_time_null" },
                        "display_description": { "type": "string" },
                        "key_data": { "$ref": "types.json#/definitions/string_null" },
                        "kernel_id": { "type": "string" },
                        "power_state": { "type": "integer" },
                        "default_ephemeral_device": { "$ref": "types.json#/definitions/string_null" },
                        "progress": { "type": "integer" },
                        "project_id": { "type": "string" },
                        "config_drive": { "type": "string" },
                        "node": { "type": "string" },
                        "ramdisk_id": { "type": "string" },
                        "access_ip_v6": { "$ref": "types.json#/definitions/string_null" },
                        "access_ip_v4": { "$ref": "types.json#/definitions/string_null" },
                        "key_name": { "type": "string" },
                        "host": { "type": "string" },
                        "ephemeral_key_uuid": { "$ref": "types.json#/definitions/uuid_null" },
                        "architecture": { "type": "string" },
                        "user_id": { "$ref": "types.json#/definitions/uuid"},
                        "task_state": { "type": "string" },
                        "shutdown_terminate": { "type": "boolean" },
                        "cell_name": { "$ref": "types.json#/definitions/string_null" },
                        "root_gb": { "type": "integer" },
                        "locked": { "type": "boolean" },
                        "name": { "type": "string" },
                        "locked_by": { "$ref": "types.json#/definitions/string_null" },
                        "launch_index": { "type": "integer" },
                        "metadata": { "type": "object" },
                        "memory_mb": { "type": "integer" },
                        "vcpus": { "type": "integer" },
                        "image_ref": { "$ref": "types.json#/definitions/uuid"},
                        "root_device_name": { "$ref": "types.json#/definitions/string_null" },
                        "auto_disk_config": { "type": "boolean" },
                        "os_type": { "type": "string" },
    
                        "scheduled_at": { "$ref": "types.json#/definitions/date_time_null" },
                        "terminated_at": { "$ref": "types.json#/definitions/date_time_null" },
    
                        "security_groups": {
                            "objects": {
                                "type": "array",
                                "items": { "$ref": "#/objects/security_group"}
                            }
                        },
    
                        "info_cache": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "instance_uuid": "[[[[UUID_1]]]]",
                                        "network_info": []
                                    }
                                },
                                { "$ref": "types.json#/definitions/timestamps" }
                            ]
                        },
    
                        "system_metadata": { "$ref": "#/objects/system_metadata" }
                    }
                },
                { "$ref": "types.json#/definitions/timestamps" }
            ]
        }
    }
}

